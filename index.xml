<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Philipp Tanlak</title><link>/</link><description>Recent content on Philipp Tanlak</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 07 Mar 2021 17:00:00 +0100</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml"/><item><title>Mastering HTML templates in Go - The fundamentals</title><link>/mastering-html-templates-in-go-the-fundamentals/</link><pubDate>Thu, 11 Mar 2021 23:00:00 +0100</pubDate><guid>/mastering-html-templates-in-go-the-fundamentals/</guid><description>Introduction For my last post about How I build web frontends in Go I&amp;rsquo;ve received an overwhelmingly amount of feedback on reddit. But one thing I&amp;rsquo;ve noticed is, that there are quite a few people who felt that the html/template package was either very hard to deal with or they did not even know about most of its features.
The official documentation of this package is a bit misleading because most of it is actually here, so I can partially understand the reasoning.</description></item><item><title>How I build web frontends in Go</title><link>/web-frontends-in-go/</link><pubDate>Sun, 07 Mar 2021 17:00:00 +0100</pubDate><guid>/web-frontends-in-go/</guid><description>Go is a great language for building all kinds of backend services like APIs. But what about web frontends? Let&amp;rsquo;s have a look&amp;hellip;</description></item><item><title>About Me</title><link>/about-me/</link><pubDate>Wed, 05 Jun 1337 13:37:00 +0100</pubDate><guid>/about-me/</guid><description>Hey! ðŸ‘‹ My name is Philipp Tanlak. I&amp;rsquo;m a full stack web developer from Germany.
Email: philipp [dot] tanlak [at] gmail.com</description></item></channel></rss>